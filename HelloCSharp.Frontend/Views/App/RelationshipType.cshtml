
@inject IDatabaseContext DatabaseContext

@if (ViewBag.Id == null) {
    <h2>@i18n.Overview_RelationshipTypes</h2>
    <table>
        <tr>
            <th>@i18n.RelationshipType_Name</th>
            <th>@i18n.RelationshipType_Examples</th>
        </tr>
        @foreach(var relationshipType in RelationshipTypeMethods.Values()) {
            <tr>
                <td><a href="@Url.Action("RelationshipType", "App", new { id = relationshipType.ToString() })">@relationshipType.GetDisplayName()</a></td>
                <td>@DatabaseContext.RelationshipRepository.FindByType(relationshipType).Count</td>
            </tr>
        }
    </table>
}
else
{
    var relationshipType = RelationshipTypeMethods.ValueOf(ViewBag.Id);
    <h2>@RelationshipTypeMethods.GetDisplayName(relationshipType)</h2>
    <table>
        <tr>
            <th>@i18n.RelationshipType_Name</th>
            <td>@RelationshipTypeMethods.GetDisplayName(relationshipType)</td>
        </tr>
        <tr>
            <th>@i18n.RelationshipType_Examples</th>
            <td>
                <ul class="simple-ul">
                    @foreach (var relationship in DatabaseContext.RelationshipRepository.FindByType(relationshipType))
                    {
                        <li>
                            <a href="@Url.Action("Person", "App", new Identifiable(relationship.FromId))">@relationship.FromName</a>
                            @RelationshipTypeMethods.GetMessage(relationship.Type)
                            <a href="@Url.Action("Person", "App", new Identifiable(relationship.ToId))">@relationship.ToName</a>
                        </li>
                    }
                </ul>
            </td>
        </tr>
    </table>
    
    <a href="@Url.Action("RelationshipType", "App", new { id = "" })">@i18n.General_Back</a>
}